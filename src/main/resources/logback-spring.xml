<!--
  logback-spring.xml
  [역할]
  - 콘솔과 파일로 동시에 로깅
  - 날짜별(일간) 파일 롤링: logs/app.YYYY-MM-DD.log
  - ERROR 로그는 별도 파일로 분리: logs/error.YYYY-MM-DD.log
  - 공통 패턴(시각/스레드/레벨/로거/메시지) 사용
  - Spring Boot 3.x 기본 로깅과 호환
-->
<configuration>

    <!-- 로그가 저장될 기본 경로. 프로젝트 루트에 logs 폴더 생성됨 -->
    <property name="LOG_PATH" value="./logs"/>

    <!-- 공통 로그 출력 패턴: 날짜 시간 | 스레드 | 레벨 | 로거 | 메시지 -->
    <property name="LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>

    <!-- 콘솔 출력 (개발 중 터미널 확인용) -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 일반 애플리케이션 로그 (INFO 이상) : 일자별 롤링 -->
    <appender name="APP" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 현재 활성 파일 -->
        <file>${LOG_PATH}/app.log</file>
        <!-- 일자별로 파일 분리 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 예: logs/app.2025-10-22.log -->
            <fileNamePattern>${LOG_PATH}/app.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 보관 기간: 최근 14일 -->
            <maxHistory>14</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 에러 전용 로그 (ERROR 레벨만) : 일자별 롤링 -->
    <appender name="ERRORS" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/error.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 프레임워크 로거 레벨(필요시 조정 가능) -->
    <logger name="org.springframework.security" level="INFO"/>
    <logger name="org.hibernate.SQL" level="INFO"/>
    <!-- JPA 바인딩 파라미터까지 보고 싶다면 아래 주석 해제 (개발 때만 권장) -->
    <!-- <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE"/> -->

    <!-- 루트 로거: 콘솔 + 파일에 모두 기록, 기본 레벨 INFO -->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="APP"/>
        <appender-ref ref="ERRORS"/>
    </root>
</configuration>
